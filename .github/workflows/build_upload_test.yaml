name: build and upload

on:
  push:
  pull_request:
  release:
    types: [edited, published]

jobs:

  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows2019 & VS 2019 supports 10.1+
          - os: ubuntu-22.04
            os_base: ubuntu
            shell: bash -l {0}

          - os: macos-12
            os_base: macos
            shell: bash -l {0}

          - os: windows-2019
            os_base: windows
            shell: powershell

    defaults:
      run:
        shell: ${{ matrix.shell}}

    env:
        ANACONDA_LABEL: dev
        ANACONDA_USER:  ${{ secrets.ANACONDA_USER }}
        ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - name: Change anaconda label on release
        if: github.event.release
        run: |
          echo "ANACONDA_LABEL=main" >> $GITHUB_ENV

      - name: Change anaconda label on prerelease
        if: "github.event.release.prerelease"
        run: |
          echo "ANACONDA_LABEL=pre" >> $GITHUB_ENV

      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: 23.1.0-0
          use-mamba: true
          python-version: '3.10'

      - name: Install conda build libraries
        run: |
          mamba install boa conda-build conda-verify anaconda-client

      - name: Install macOS SDK
        if: contains( matrix.os, 'macos')
        working-directory: /Users/runner
        run: |
          curl -fsSL https://github.com/phracker/MacOSX-SDKs/releases/download/10.15/MacOSX10.9.sdk.tar.xz > ~/MacOSX10.9.sdk.tar.xz
          tar -xzf ~/MacOSX10.9.sdk.tar.xz
          rm ~/MacOSX10.9.sdk.tar.xz

      - uses: Jimver/cuda-toolkit@v0.2.7
        if: ${{ matrix.os_base != 'macos' }}
        id: cuda-toolkit
        with:
          cuda: '11.7.0'

      - name: Set default upload behavior
        run: |
          conda config --set anaconda_upload no

      - name: Overwrite upload config (master and release)
        if: github.event.release || github.event.release.prerelease || (github.ref == 'refs/heads/master')
        run: |
          conda config --set anaconda_upload yes

      - name: Build and upload package (UNIX)
        if: runner.os != 'Windows'
        run: |
          cd ./dist_tools/conda
          conda mambabuild -c conda-forge spline --user $ANACONDA_USER --token $ANACONDA_TOKEN --label $ANACONDA_LABEL

      - name: Build and upload package (Windows)
        if: runner.os == 'Windows'
        run: |
          cd ./dist_tools/conda
          conda mambabuild -c conda-forge spline --user $env:ANACONDA_USER --token $env:ANACONDA_TOKEN --label $env:ANACONDA_LABEL


  build-linux-pip:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]


    steps:
    - uses: actions/checkout@v2

    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-variant: Mambaforge
        miniforge-version: 23.1.0-0
        use-mamba: true
        environment-file: environment.yml
        python-version: ${{ matrix.python-version }}
        activate-environment: spline_dev

    - uses: Jimver/cuda-toolkit@v0.2.8
      id: cuda-toolkit
      with:
        cuda: '11.7.0'

    - name: Build SplinePSF (pip)
      id: pip-build
      shell: bash -l {0}
      run: |
        cd ./python
        pip install wheel
        python setup.py bdist_wheel
        WHEEL=$(ls dist)
        echo "::set-output name=wheel_filename::$WHEEL"

    - name: Upload to GitHub release
      if: github.event.release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./python/dist/${{ steps.pip-build.outputs.wheel_filename }}
        asset_name: ${{ steps.pip-build.outputs.wheel_filename }}
        asset_content_type: binary/octet-stream
